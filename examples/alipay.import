# -*- coding: UTF-8 -*-
#!/usr/bin/env python

import os
import sys
import logging
import beancount.ingest.extract

isSmart = True
try:
    from smart_importer import apply_hooks, PredictPostings
    from smart_importer.detector import DuplicateDetector
    import jieba
    jieba.initialize()
    tokenizer = lambda s: list(jieba.cut(s))

except ImportError:
    isSmart = False

beancount.ingest.extract.HEADER = ''
sys.path.append("./")
from importers.alipay import AlipayImporter

account = "Assets:Flow:EBank:Alipay"

accountDict = {
    "红包": "Income:Investment:OtherIncome",
    "花呗": "Liabilities:Life:Huabei:Alipay",
    "平安银行信用卡": "Liabilities:Life:CreditCard:Pingan",
    "建设银行信用卡": "Liabilities:Life:CreditCard:CCB",
    "汇丰银行（中国）信用卡": "Liabilities:Life:CreditCard:HSBC",
    "中信银行": "Liabilities:Life:CreditCard:CITIC",
    "浦发银行信用卡": "Liabilities:Life:CreditCard:SPDB",
    "中国民生银行": "Liabilities:Life:CreditCard:CMBC",
    "广发银行": "Liabilities:Life:CreditCard:CGB",
    "余额": "Assets:Flow:EBank:Alipay",
    "农业银行": "Assets:Flow:Bank:ABCDebt",
    "工商银行": "Assets:Flow:Bank:ICBCDebt",
    "农业银行": "Assets:Flow:Bank:ABCDebt",
    "平安银行储蓄卡": "Assets:Flow:Bank:PinganDebt",
    "汇丰银行储蓄卡": "Assets:Flow:Bank:HSBCDebt",
    "建设银行储蓄卡": "Assets:Flow:Bank:CCBDebt",
    "浦发银行储蓄卡": "Assets:Flow:Bank:SPDBDebt",
    "中国银行储蓄卡": "Assets:Flow:Bank:BOCDebt",
    "汇丰银行储蓄卡": "Assets:Flow:Bank:HSBCDebt",
    "余额宝": "Assets:Flow:EBank:Alipay",
    "账户余额": "Assets:Flow:EBank:Alipay"
}

expenseDict = {
    "上海市实验学校,餐厅,餐饮,火锅,麦当劳,汉堡王,肯德基,KITCHEN,陈香贵": "Expenses:Life:Dining:Lunch",
    "好特卖HotMaxx,阿果果上海齐河路店,全家,饮料": "Expenses:Life:Dining:Drinking",
    "早餐,月饼,多乐之日,早安巴黎": "Expenses:Life:Dining:Breakfast",
    "海苔,红豆沙,奶粉,果茶,燕麦奶,小香肠,鸭舌,咖啡,奶酪棒,猪肉脯,薯片,饼干,猪肉干,奶茶,果冻,零食": "Expenses:Life:Dining:Refreshment",
    "焖肉面,酱瓜,预制菜,咸鸭蛋,米粉,盒马,食材,鸡蛋,火腿,红薯,馄饨,烧卖,番茄,挂面,意面,西贝莜面村,梅干菜,披萨,粽子,小笼包,葱油饼,手抓饼,拌面,午餐肉,虾米,拉面,排骨,炸猪排,鱼丸,点心,避风塘,酱油": "Expenses:Life:Dining:Ingredients",
    "芒果,油桃,苹果,黄桃,水蜜桃": "Expenses:Life:Dining:Fruit",
    "伴手礼,贺卡,礼物": "Expenses:Life:Social:Gifts",
    "红星欧丽洛雅家居生活广场,停车,临停订单,恒盛苑": "Expenses:Life:Auto:Parking",
    "石化,石油": "Expenses:Life:Auto:Gasoline",
    "剑桥英语,教育科技": "Expenses:Life:Education:TutoringFee",
    "奥付云(易迅),快剪发": "Expenses:Life:ClothingBeauty:Haircut",
    "简漫,优衣库,T恤,裙子,t恤,打底裤,上衣,表演服,背心,睡衣,长裤": "Expenses:Life:ClothingBeauty:Clothes",
    "内衣,内裤": "Expenses:Life:ClothingBeauty:Accessories",
    "雨靴,雨鞋,棉鞋,跑步鞋,舞鞋,皮鞋,长靴": "Expenses:Life:ClothingBeauty:Shoes",
    "欧莱雅,韩束,护发素,洗发水,染发剂,润肤乳,粉底": "Expenses:Life:ClothingBeauty:Cosmetics",
    "民航上海医院,唯宜儿科,平安健康,维生素,益生菌": "Expenses:Life:Medical:Drugs",
    "文婕": "Expenses:Life:Medical:MedicalFee",
    "安心接送,同程旅行,滴滴": "Expenses:Life:Transportation:Taxi",
    "菜鸟裹裹,顺丰,达达快送": "Expenses:Life:Transportation:Express",
    "上海地铁": "Expenses:Life:Transportation:Metro",
    "火车票": "Expenses:Life:Transportation:Train",
    "惠省钱": "Expenses:Life:Entertainment:Shopping",
    "教辅,教材": "Expenses:Life:Publications:Books",
    "剑桥英语,优考试,记忆曲线": "Expenses:Life:Education:TutoringFee",
    "铅笔,马克笔,粘土,一课一练,记号笔,复印纸,日记本,书签,油画棒,教具,实验,收纳册,文具,练习册,作业": "Expenses:Life:Education:Stationery",
    "垃圾桶,厨房纸巾,湿巾,百洁布,收纳箱,清洁剂,晴雨两用伞,保鲜袋,牙刷,牙膏,眼镜布,美甲工具,擦眼镜纸,厕纸,洗衣凝珠,卫生纸,洗衣机清洗剂,垃圾袋,精油贴": "Expenses:Life:Living:Appliances",
    "网上国网": "Expenses:Life:Utilities:Electric",
    "SECA,Rui": "Expenses:Life:Entertainment:FitnessActivity",
    "龟粮,猫抓板,猫粮,猫砂": "Expenses:Life:Entertainment:Pet",
    "洗车": "Expenses:Life:Auto:CarBeauty",
    "乐高,手办,兴顺共赢科技": "Expenses:Life:Entertainment:Toys",
    "出入境业务,路通技研": "Expenses:Life:Entertainment:Travel",
    "物业费": "Expenses:Life:Utilities:PropertyService",
}

if isSmart:
    CONFIG = [
        apply_hooks(AlipayImporter(account, accountDict=accountDict, expenseDict=expenseDict),
                    [DuplicateDetector(), PredictPostings(string_tokenizer=tokenizer)])
    ]
else:
    CONFIG = [
        AlipayImporter(account, accountDict=accountDict, expenseDict=expenseDict)
    ]
