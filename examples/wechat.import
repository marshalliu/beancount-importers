# -*- coding: UTF-8 -*-
#!/usr/bin/env python

import os
import sys
import logging
import beancount.ingest.extract

isSmart = True
try:
    from smart_importer import apply_hooks, PredictPostings
    from smart_importer.detector import DuplicateDetector
    import jieba
    jieba.initialize()
    tokenizer = lambda s: list(jieba.cut(s))

except ImportError:
    isSmart = False

beancount.ingest.extract.HEADER = ''
sys.path.append("./")
from importers.wechat import WechatImporter

account = "Assets:Flow:EBank:WeChat"

accountDict = {
    "微信红包": "Income:Investment:OtherIncome",
    "平安银行": "Liabilities:Life:CreditCard:Pingan",
    "建设银行(1201)": "Liabilities:Life:CreditCard:CCB",
    "建设银行(6396)": "Liabilities:Life:CreditCard:CCB",
    "中信银行": "Liabilities:Life:CreditCard:CITIC",
    "浦发银行": "Liabilities:Life:CreditCard:SPDB",
    "广发银行": "Liabilities:Life:CreditCard:CGB",
    "零钱": "Assets:Flow:EBank:WeChat",
    "农业银行": "Assets:Flow:Bank:ABCDebt",
    "工商银行": "Assets:Flow:Bank:ICBCDebt",
    "农业银行": "Assets:Flow:Bank:ABCDebt",
    "建设银行(3456)": "Assets:Flow:Bank:CCBDebt",
    "/": "Assets:Flow:EBank:WeChat"
}

expenseDict = {
    "餐厅,餐饮,火锅,西贝莜面村,麦当劳,汉堡王,KITCHEN,堂食,达美乐,美团,料理": "Expenses:Life:Dining:Lunch",
    "上海市实验学校": "Expenses:Life:Dining:Lunch",
    "好特卖HotMaxx,阿果果,全家,雪碧,尚优选": "Expenses:Life:Dining:Drinking",
    "多乐之日,早安巴黎": "Expenses:Life:Dining:Breakfast",
    "红星欧丽洛雅家居生活广场,停车,临停订单,恒盛苑": "Expenses:Life:Auto:Parking",
    "石化,石油": "Expenses:Life:Auto:Gasoline",
    "中铁网络,火车票": "Expenses:Life:Transportation:Train",
    "剑桥英语": "Expenses:Life:Education:TutoringFee",
    "奥付云(易迅)": "Expenses:Life:ClothingBeauty:Haircut",
    "民航上海医院,唯宜儿科,平安健康": "Expenses:Life:Medical:Drugs",
    "安心接送,同程旅行,滴滴": "Expenses:Life:Transportation:Taxi",
    "菜鸟裹裹,顺丰": "Expenses:Life:Transportation:Express",
    "惠省钱": "Expenses:Life:Entertainment:Shopping",
    "SECA,Rui": "Expenses:Life:Entertainment:FitnessActivity",
    "公共事业费-水": "Expenses:Life:Utilities:Water",
    "公共事业费-电": "Expenses:Life:Utilities:Electric",
    "公共事业费-燃气": "Expenses:Life:Utilities:Gas",
    "GDC": "Expenses:Life:Entertainment:Exhibition",
}

if isSmart:
    CONFIG = [
        # WechatImporter(accountDict=accountDict)
        apply_hooks(WechatImporter(account, accountDict=accountDict, expenseDict=expenseDict),
                    [DuplicateDetector(), PredictPostings(string_tokenizer=tokenizer)])
    ]
else:
    CONFIG = [
        WechatImporter(account, accountDict=accountDict, expenseDict=expenseDict)
    ]
